<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Abort" xml:space="preserve">
    <value>Avorter</value>
  </data>
  <data name="Alive" xml:space="preserve">
    <value>Actif</value>
  </data>
  <data name="Banned" xml:space="preserve">
    <value>Banni</value>
  </data>
  <data name="BotLog" xml:space="preserve">
    <value>Journal du bot</value>
  </data>
  <data name="BotLogDisabledError" xml:space="preserve">
    <value>Le journal du bot a été désactivé dans les paramètres, veuillez l'activer pour pouvoir voir le journal du bot pour les hits futurs</value>
  </data>
  <data name="Bots" xml:space="preserve">
    <value>Bots</value>
  </data>
  <data name="by" xml:space="preserve">
    <value>par</value>
  </data>
  <data name="CaptchaCredit" xml:space="preserve">
    <value>Crédit Captcha</value>
  </data>
  <data name="CapturedData" xml:space="preserve">
    <value>Données capturées</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Changer</value>
  </data>
  <data name="ChangingPleaseWait" xml:space="preserve">
    <value>Changement ... veuillez patienter</value>
  </data>
  <data name="CombinationsText" xml:space="preserve">
    <value>Combinaisons de {0} avec longueur {1}</value>
  </data>
  <data name="Config" xml:space="preserve">
    <value>Config</value>
  </data>
  <data name="Controls" xml:space="preserve">
    <value>Contrôles</value>
  </data>
  <data name="CopyData" xml:space="preserve">
    <value>Copier des données</value>
  </data>
  <data name="CopyDataCapture" xml:space="preserve">
    <value>Copie de données + capture</value>
  </data>
  <data name="CPM" xml:space="preserve">
    <value>CPM</value>
  </data>
  <data name="Custom" xml:space="preserve">
    <value>Personnalisé</value>
  </data>
  <data name="CustomInput" xml:space="preserve">
    <value>Entrée personnalisée</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Donnés</value>
  </data>
  <data name="Database" xml:space="preserve">
    <value>Base de données</value>
  </data>
  <data name="DataPool" xml:space="preserve">
    <value>Pool de données</value>
  </data>
  <data name="DataStats" xml:space="preserve">
    <value>Statistiques de données</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="days" xml:space="preserve">
    <value>jour(s)</value>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>Désactivé</value>
  </data>
  <data name="DiscordWebhook" xml:space="preserve">
    <value>Discord webhook</value>
  </data>
  <data name="TelegramBot" xml:space="preserve">
    <value>Bot Telegram</value>
  </data>
  <data name="Token" xml:space="preserve">
    <value>Token</value>
  </data>
  <data name="ChatId" xml:space="preserve">
    <value>ID du chat</value>
  </data>
  <data name="EditBotsAmount" xml:space="preserve">
    <value>Modifier le montant des bots</value>
  </data>
  <data name="Elapsed" xml:space="preserve">
    <value>Écoulé</value>
  </data>
  <data name="Errors" xml:space="preserve">
    <value>Erreurs</value>
  </data>
  <data name="ExecutionInfo" xml:space="preserve">
    <value>Informations d'exécution</value>
  </data>
  <data name="Fails" xml:space="preserve">
    <value>Échoue</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>Fichier</value>
  </data>
  <data name="FileSystem" xml:space="preserve">
    <value>Système de fichiers</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Groupe</value>
  </data>
  <data name="HardStopMessage" xml:space="preserve">
    <value>Envoi d'un signal d'interruption</value>
  </data>
  <data name="HitOutputs" xml:space="preserve">
    <value>Sorties Hit</value>
  </data>
  <data name="Hits" xml:space="preserve">
    <value>Hits</value>
  </data>
  <data name="InfiniteDataPool" xml:space="preserve">
    <value>Pool de données infini</value>
  </data>
  <data name="Invalid" xml:space="preserve">
    <value>Invalide</value>
  </data>
  <data name="JobOptions" xml:space="preserve">
    <value>Options de Job</value>
  </data>
  <data name="LineCheckedMessage" xml:space="preserve">
    <value>Ligne vérifiée ({0}) ({1}) avec état {2}</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Chargement</value>
  </data>
  <data name="NoConfig" xml:space="preserve">
    <value>Pas de config</value>
  </data>
  <data name="NoHitSelectedWarning" xml:space="preserve">
    <value>Vous devez d'abord sélectionner un hit</value>
  </data>
  <data name="NoRecordsToDisplay" xml:space="preserve">
    <value>Aucun enregistrement à afficher</value>
  </data>
  <data name="OtherStats" xml:space="preserve">
    <value>Autres statistiques</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="PauseMessage" xml:space="preserve">
    <value>Envoi du signal de pause</value>
  </data>
  <data name="PausingMessage" xml:space="preserve">
    <value>Pause ... veuillez attendre la fin du traitement des tâches en cours</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progrès</value>
  </data>
  <data name="Proxy" xml:space="preserve">
    <value>Proxy</value>
  </data>
  <data name="ProxyMode" xml:space="preserve">
    <value>Mode proxy</value>
  </data>
  <data name="ProxySources" xml:space="preserve">
    <value>Sources proxy</value>
  </data>
  <data name="ProxyStats" xml:space="preserve">
    <value>Statistiques proxy</value>
  </data>
  <data name="RangeText" xml:space="preserve">
    <value>Intervalle de {0} avec montant {1} et étape {2} (remplissage {3})</value>
  </data>
  <data name="RefreshList" xml:space="preserve">
    <value>Rafraîchir la liste</value>
  </data>
  <data name="Remaining" xml:space="preserve">
    <value>Restant</value>
  </data>
  <data name="Remote" xml:space="preserve">
    <value>À distance</value>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Reprendre</value>
  </data>
  <data name="ResumeMessage" xml:space="preserve">
    <value>Reprise de la vérification</value>
  </data>
  <data name="Retried" xml:space="preserve">
    <value>Réessayé</value>
  </data>
  <data name="SendToDebugger" xml:space="preserve">
    <value>Envoyer au débogueur</value>
  </data>
  <data name="ShowFullLog" xml:space="preserve">
    <value>Afficher le journal complet</value>
  </data>
  <data name="Skip" xml:space="preserve">
    <value>Sauter</value>
  </data>
  <data name="SkippedWait" xml:space="preserve">
    <value>Sauté l'attente</value>
  </data>
  <data name="SkipWait" xml:space="preserve">
    <value>Sauter attendre</value>
  </data>
  <data name="SoftStopMessage" xml:space="preserve">
    <value>Envoi d'un signal d'arrêt progressif</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Démarrer</value>
  </data>
  <data name="StartedChecking" xml:space="preserve">
    <value>la vérification a commencé</value>
  </data>
  <data name="StartedWaiting" xml:space="preserve">
    <value>commencé en attente</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="StoppingMessage" xml:space="preserve">
    <value>Arrêt ... veuillez attendre la fin du traitement des tâches en cours. Ou, tu sais, tu pourrais toujours</value>
  </data>
  <data name="TaskError" xml:space="preserve">
    <value>Erreur de tâche</value>
  </data>
  <data name="TaskManagerCompleted" xml:space="preserve">
    <value>Le gestionnaire de tâches a terminé tous ses travaux</value>
  </data>
  <data name="TaskManagerError" xml:space="preserve">
    <value>Erreur du gestionnaire de tâches!</value>
  </data>
  <data name="TaskManagerPaused" xml:space="preserve">
    <value>Le gestionnaire de tâches a été suspendu</value>
  </data>
  <data name="Tested" xml:space="preserve">
    <value>Testé</value>
  </data>
  <data name="TimeLeft" xml:space="preserve">
    <value>Temps restant</value>
  </data>
  <data name="ToCheck" xml:space="preserve">
    <value>À vérifier</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Totale</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Uh-Oh" xml:space="preserve">
    <value>Oula</value>
  </data>
  <data name="Waiting" xml:space="preserve">
    <value>En attendant</value>
  </data>
  <data name="WaitingForData" xml:space="preserve">
    <value>En attente de données</value>
  </data>
  <data name="Wordlist" xml:space="preserve">
    <value>Wordlist</value>
  </data>
</root>