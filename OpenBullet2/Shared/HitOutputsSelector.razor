@using OpenBullet2.Models.Hits
@inject Microsoft.Extensions.Localization.IStringLocalizer<HitOutputsSelector> Loc

<div class="container-fluid">

    <div class="row mb-3">
        <div class="list-group list-group-horizontal">
            <button class="btn btn-sm btn-outline-primary" @onclick="AddDatabase">
                <span class="oi oi-plus"></span> @Loc["Database"]
            </button>
            <button class="btn btn-sm btn-outline-primary" @onclick="AddFileSystem">
                <span class="oi oi-plus"></span> @Loc["FileSystem"]
            </button>
            <button class="btn btn-sm btn-outline-primary" @onclick="AddDiscord">
                <span class="oi oi-plus"></span> @Loc["DiscordWebhook"]
            </button>
             <button class="btn btn-sm btn-outline-primary" @onclick="AddTelegram">
                <span class="oi oi-plus"></span> @Loc["TelegramBot"]
            </button>
        </div>
    </div>

    @foreach (var output in HitOutputs)
    {
        <EditForm Model="output">
            <div class="row mb-3" style="min-height: 20px; line-height: 20px;">
                @switch (output)
                {
                    case DatabaseHitOutputOptions x:
                        <div class="col-auto">
                            <span class="fg-tocheck">@Loc["Database"]</span>
                        </div>
                        <div class="col align-self-stretch px-1">
                            <span class="font-italic">@Loc["NoSettingsRequired"]</span>
                        </div>
                        break;

                    case FileSystemHitOutputOptions x:
                        <div class="col-auto">
                            <span class="fg-hit">@Loc["FileSystem"]</span>
                        </div>
                        <div class="col-auto px-1">
                            <span>@Loc["BaseDirectory"]:</span>
                        </div>
                        <div class="col align-self-stretch px-1">
                            <InputText @bind-Value="x.BaseDir" />
                        </div>
                        break;

                    case DiscordWebhookHitOutputOptions x:
                        <div class="col-auto">
                            <span class="fg-retry">@Loc["DiscordWebhook"]</span>
                        </div>
                        <div class="col-auto px-1">
                            <span>@Loc["WebhookURL"]:</span>
                        </div>
                        <div class="col align-self-stretch px-1">
                            <InputText @bind-Value="x.Webhook" />
                        </div>
                        <div class="col-auto px-1">
                            <span>@Loc["Username"]:</span>
                        </div>
                        <div class="col align-self-stretch px-1">
                            <InputText @bind-Value="x.Username" />
                        </div>
                        <div class="col-auto px-1">
                            <span>@Loc["AvatarURL"]:</span>
                        </div>
                        <div class="col align-self-stretch px-1">
                            <InputText @bind-Value="x.AvatarUrl" />
                        </div>
                        break;

                    case TelegramBotHitOutputOptions x:
                        <div class="col-auto">
                            <span class="fg-retry">@Loc["TelegramBot"]</span>
                        </div>
                        <div class="col-auto px-1">
                            <span>@Loc["ApiServer"]:</span>
                        </div>
                        <div class="col align-self-stretch px-1">
                            <InputText @bind-Value="x.ApiServer" />
                        </div>
                        <div class="col-auto px-1">
                            <span>@Loc["Token"]:</span>
                        </div>
                        <div class="col align-self-stretch px-1">
                            <InputText @bind-Value="x.Token" />
                        </div>
                        <div class="col-auto px-1">
                            <span>@Loc["ChatId"]:</span>
                        </div>
                        <div class="col align-self-stretch px-1">
                            <InputNumber @bind-Value="x.ChatId" />
                        </div>
                        break;
                }
                <div class="col-auto">
                    <button class="btn btn-sm btn-outline-danger" @onclick="(() => HitOutputs.Remove(output))">
                        <span class="oi oi-x"></span>
                    </button>
                </div>
            </div>
        </EditForm>
    }
</div>

@code {
    [Parameter] public List<HitOutputOptions> HitOutputs { get; set; }

    private void AddDatabase()
    {
        if (!HitOutputs.Any(o => o is DatabaseHitOutputOptions))
            HitOutputs.Add(new DatabaseHitOutputOptions());
    }

    private void AddFileSystem()
    {
        if (!HitOutputs.Any(o => o is FileSystemHitOutputOptions))
            HitOutputs.Add(new FileSystemHitOutputOptions { BaseDir = "UserData/Hits" });
    }

    private void AddDiscord()
    {
        HitOutputs.Add(new DiscordWebhookHitOutputOptions());
    }
    
    private void AddTelegram()
    {
        HitOutputs.Add(new TelegramBotHitOutputOptions());
    }
}
